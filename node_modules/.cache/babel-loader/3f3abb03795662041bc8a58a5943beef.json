{"ast":null,"code":"import { useContext, useEffect, useState } from 'react';\nimport getGifs from '../services/getGifs';\nimport GifsContext from '../context/GifsContext';\nexport function useGifs({\n  keyword\n} = {\n  keyword: null\n}) {\n  const [loading, setLoading] = useState(false);\n  const {\n    gifs,\n    setGifs\n  } = useContext(GifsContext);\n  useEffect(function () {\n    setLoading(true); // recuperamos la keyword del localStorage\n\n    const keywordToUse = keyword || localStorage.getItem('lastKeyword') || 'random';\n    getGifs({\n      keyword: keywordToUse\n    }).then(gifs => {\n      setGifs(gifs);\n      setLoading(false); // guardamos la keyword en el localStorage\n\n      localStorage.setItem('lastKeyword', keyword);\n    });\n  }, [keyword, setGifs]);\n  return {\n    loading,\n    gifs\n  };\n}","map":{"version":3,"sources":["/home/emarin/Escritorio/Dev/miduDevBootcamp/react/react-live-coding/src/hooks/useGifs.js"],"names":["useContext","useEffect","useState","getGifs","GifsContext","useGifs","keyword","loading","setLoading","gifs","setGifs","keywordToUse","localStorage","getItem","then","setItem"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAO,SAASC,OAAT,CAAkB;AAAEC,EAAAA;AAAF,IAAc;AAAEA,EAAAA,OAAO,EAAE;AAAX,CAAhC,EAAmD;AACxD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,UAAU,CAACI,WAAD,CAAlC;AAEAH,EAAAA,SAAS,CAAC,YAAY;AACpBO,IAAAA,UAAU,CAAC,IAAD,CAAV,CADoB,CAEpB;;AACA,UAAMG,YAAY,GAAGL,OAAO,IAAIM,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,IAAkD,QAAvE;AAEAV,IAAAA,OAAO,CAAC;AAAEG,MAAAA,OAAO,EAAEK;AAAX,KAAD,CAAP,CACGG,IADH,CACQL,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFY,CAGZ;;AACAI,MAAAA,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCT,OAApC;AACD,KANH;AAOD,GAZQ,EAYN,CAACA,OAAD,EAAUI,OAAV,CAZM,CAAT;AAcA,SAAO;AAACH,IAAAA,OAAD;AAAUE,IAAAA;AAAV,GAAP;AACD","sourcesContent":["import {useContext, useEffect, useState} from 'react'\nimport getGifs from '../services/getGifs'\nimport GifsContext from '../context/GifsContext'\n\nexport function useGifs ({ keyword } = { keyword: null }) {\n  const [loading, setLoading] = useState(false)\n  const {gifs, setGifs} = useContext(GifsContext)\n\n  useEffect(function () {\n    setLoading(true)\n    // recuperamos la keyword del localStorage\n    const keywordToUse = keyword || localStorage.getItem('lastKeyword') || 'random'\n\n    getGifs({ keyword: keywordToUse })\n      .then(gifs => {\n        setGifs(gifs)\n        setLoading(false)\n        // guardamos la keyword en el localStorage\n        localStorage.setItem('lastKeyword', keyword)\n      })\n  }, [keyword, setGifs])\n\n  return {loading, gifs}\n}"]},"metadata":{},"sourceType":"module"}